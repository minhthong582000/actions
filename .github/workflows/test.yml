name: Build Container Images

on:
  push:
    branches:
      - main
    paths:
      - "dockerfiles/**"
  pull_request:
    branches:
      - main
    paths:
      - "dockerfiles/**"

env:
  REGISTRY: ghcr.io/${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  get-changed-dirs:
    name: Get all changed directories
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: tj-actions/changed-files@v37
        id: changed-dir-names
        with:
          dir_names: "true"
          json: "true"
          path: "dockerfiles"
          files: |
            **

      - name: Echo changed directories
        run: echo '${{ steps.changed-dir-names.outputs.all_changed_and_modified_files }}'
        shell: bash

      - name: Set changed directories as matrix output
        id: set-matrix
        run: echo "matrix={\"dirs\":${{ steps.changed-dir-names.outputs.all_changed_and_modified_files }}}" >>"$GITHUB_OUTPUT"
        shell: bash

  build_and_publish:
    runs-on: ubuntu-latest
    needs: get-changed-dirs
    strategy:
      matrix: ${{ fromJSON(needs.get-changed-dirs.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version
        id: version
        run: |
          VER=$(cat ./dockerfiles/${{ matrix.dirs }}/VERSION)
          echo "version=$VER" >>$GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./dockerfiles/${{ matrix.dirs }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ matrix.dirs }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ matrix.dirs }}:buildcache,mode=max
          tags: |
            ${{ env.REGISTRY }}/${{ matrix.dirs }}:${{ steps.version.outputs.version }}
            ${{ env.REGISTRY }}/${{ matrix.dirs }}:latest
